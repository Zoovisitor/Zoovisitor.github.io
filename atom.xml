<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blogs</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-07-30T10:05:12.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wcy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hadoop参数调优</title>
    <link href="http://yoursite.com/2017/07/30/Hadoop%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98/"/>
    <id>http://yoursite.com/2017/07/30/Hadoop参数调优/</id>
    <published>2017-07-30T09:56:44.000Z</published>
    <updated>2017-07-30T10:05:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-HDFS调优"><a href="#1-HDFS调优" class="headerlink" title="1 HDFS调优"></a>1 HDFS调优</h2><ul>
<li>设置合理的块大小（dfs.block.size）</li>
<li>将中间结果目录设置为分布在多个磁盘以提升写入速度 （mapred.local.dir）</li>
<li>设置DataNode处理RPC的线程数，大集群可以适当加大 （dfs.datanode.handler.count）</li>
<li>设置NameNode能同时 处理的请求数 （dfs.namenode.handler.count），数量为集群规模的自然对数（lnN）的20倍</li>
</ul>
<h2 id="2-YARN调优"><a href="#2-YARN调优" class="headerlink" title="2 YARN调优"></a>2 YARN调优</h2><p>YARN的资源表示模型Container，Container将资源抽象为两个维度，内存和虚拟CPU核（vcore）,用于兼容各种计算框架和动态的分配资源，减少资源的浪费。</p>
<ul>
<li>容量内存（yarn.nodemanager.resource.mmeory-mb）</li>
<li>最小容量内存（yarn.scheduler.minimum-allocation-mb）</li>
<li>容量内存递增（yarn.scheduler.increment-allocation-mb）</li>
<li>最大容量内存（yarn.scheduler.maximum-allocation-mb）</li>
</ul>
<h2 id="3-MapReduce调优"><a href="#3-MapReduce调优" class="headerlink" title="3 MapReduce调优"></a>3 MapReduce调优</h2><p>（1）增大作业的并行程度<br>    实质上是改变输入分片（input split）的大小，输入分片是一个逻辑概念，是一个Map Task的输入。再调优的过程中，尽量让输入分片与块大小一样，这样就能实现计算本地化，减少不必要的网络传输。<br>    计算公式为：max(mapred.min.split.size, min(mapred.max.split.size, dfs.block.size))<br>（2）给每个任务足够的资源（受限于YARN资源的配置）</p>
<ul>
<li>Map任务内存（mapreduce.map.memory.mb）</li>
<li>Reduce任务内存（mapreduce.reduce.memory.mb）</li>
<li>Map任务最大堆栈（mapreduce.map.java.opts.max.heep）</li>
<li>Reduce任务最大堆栈（mapreduce.reduce.java.opts.max.heep）</li>
<li>ApplicationMaster内存（yarn.app.mapreduce.am.resource.mb）<br>（3）在满足前两个条件下，尽可能的给shuffle预留资源</li>
<li>最大洗牌链接（mapreduce.shuffle.max.connections）</li>
<li>I/O排序内存缓存MiB（mapreduce.task.io.sort.mb）</li>
<li>I/O排序因子（mapreduce.task.io.sort.factor）</li>
<li>洗牌期间并行传输的默认数量（mapreduce.reduce.shuffle.parallelcopies）</li>
<li>压缩Map输出（mapreduce.map.output.compress）</li>
</ul>
<h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>RPC（Remote Procedure Call Protocol）——远程过程调用协议，它是一种通过网络从远程计算机程序上请求服务，而不需要了解底层网络技术的协议。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-HDFS调优&quot;&gt;&lt;a href=&quot;#1-HDFS调优&quot; class=&quot;headerlink&quot; title=&quot;1 HDFS调优&quot;&gt;&lt;/a&gt;1 HDFS调优&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;设置合理的块大小（dfs.block.size）&lt;/li&gt;
&lt;li&gt;将中间结果目
    
    </summary>
    
      <category term="Hadoop" scheme="http://yoursite.com/categories/Hadoop/"/>
    
    
  </entry>
  
</feed>
