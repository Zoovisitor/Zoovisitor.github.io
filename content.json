{"meta":{"title":"Blogs","subtitle":null,"description":null,"author":"wcy","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"Hadoop参数调优","slug":"Hadoop参数调优","date":"2017-07-30T09:56:44.000Z","updated":"2017-07-30T10:19:18.000Z","comments":true,"path":"2017/07/30/Hadoop参数调优/","link":"","permalink":"http://yoursite.com/2017/07/30/Hadoop参数调优/","excerpt":"","text":"1 HDFS调优 设置合理的块大小（dfs.block.size） 将中间结果目录设置为分布在多个磁盘以提升写入速度 （mapred.local.dir） 设置DataNode处理RPC的线程数，大集群可以适当加大 （dfs.datanode.handler.count） 设置NameNode能同时 处理的请求数 （dfs.namenode.handler.count），数量为集群规模的自然对数（lnN）的20倍 2 YARN调优YARN的资源表示模型Container，Container将资源抽象为两个维度，内存和虚拟CPU核（vcore）,用于兼容各种计算框架和动态的分配资源，减少资源的浪费。 容量内存（yarn.nodemanager.resource.mmeory-mb） 最小容量内存（yarn.scheduler.minimum-allocation-mb） 容量内存递增（yarn.scheduler.increment-allocation-mb） 最大容量内存（yarn.scheduler.maximum-allocation-mb） 3 MapReduce调优（1）增大作业的并行程度，实质上是改变输入分片（input split）的大小，输入分片是一个逻辑概念，是一个MapTask的输入。再调优的过程中，尽量让输入分片与块大小一样，这样就能实现计算本地化，减少不必要的网络传输。计算公式为：max(mapred.min.split.size, min(mapred.max.split.size, dfs.block.size)) （2）给每个任务足够的资源（受限于YARN资源的配置） Map任务内存（mapreduce.map.memory.mb） Reduce任务内存（mapreduce.reduce.memory.mb） Map任务最大堆栈（mapreduce.map.java.opts.max.heep） Reduce任务最大堆栈（mapreduce.reduce.java.opts.max.heep） ApplicationMaster内存（yarn.app.mapreduce.am.resource.mb） （3）在满足前两个条件下，尽可能的给shuffle预留资源 最大洗牌链接（mapreduce.shuffle.max.connections） I/O排序内存缓存MiB（mapreduce.task.io.sort.mb） I/O排序因子（mapreduce.task.io.sort.factor） 洗牌期间并行传输的默认数量（mapreduce.reduce.shuffle.parallelcopies） 压缩Map输出（mapreduce.map.output.compress） 备注RPC（Remote Procedure Call Protocol）——远程过程调用协议，它是一种通过网络从远程计算机程序上请求服务，而不需要了解底层网络技术的协议。","categories":[{"name":"Hadoop","slug":"Hadoop","permalink":"http://yoursite.com/categories/Hadoop/"}],"tags":[]}]}